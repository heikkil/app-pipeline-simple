* note competion

http://gmod.org/wiki/DIYA !
Tue Apr 27 15:48:29 AST 2010

* how to release using dzil

Sun Dec 12 13:29:48 AST 2010

removed Build and Makefile dependencies and replaced with Dist::Zilla

dzil test
dzil build
...
dzil clean

Recipe for dzil and git integration:
 
http://www.polettix.it/perlettix/id_dist-zilla

Dag Olden's bundle and examples:

http://search.cpan.org/~dagolden/Dist-Zilla-PluginBundle-DAGOLDEN-0.013/lib/Dist/Zilla/PluginBundle/DAGOLDEN.pm
http://search.cpan.org/~jquelin/Dist-Zilla-PluginBundle-JQUELIN-1.101620/lib/Dist/Zilla/PluginBundle/JQUELIN.pm


For some reason .gitignore files are not ignored from the release
I had to modify 

/usr/local/share/perl/5.10.1/Dist/Zilla/Plugin/PruneCruft.pm

by hand to add:

  return 1 if $file->name =~ /~$/;
  return 1 if $file->name =~ /#/;

* moving to Log::Log4perl

log4 perl works. I got rid of the AUTOLOAD on my module. 
http://www.perl.com/pub/2002/09/11/log4perl.html

    # idea: launch separate process for each step using Parallel::Forkmanager
    #       or a batch submission system

* some workflow engines

    * http://www.taverna.org.uk/
    * http://www.knime.org/
    * https://kepler-project.org/
    * Mobyle http://lipm-bioinfo.toulouse.inra.fr/biomoby/PlayMOBY/
    * http://www.ailab.si/orange/
    * http://ergatis.sourceforge.net/

* todo
check that interactive input works
make steps wait for the the previous output if it is missing

* Philosophy

An analysis pipeline is composed of individual programs the are
executed in order and read in initial data, options and output from
previous steps. A good pipeline creates a powerful and flexible
program in its own right.

Common tools to code a pipeline or a workflow, are UNIX shell[1] and
GNU make[2]. Both have their advantages but neither is ideal.

|              | *shell*             | *make*               |
|--------------+---------------------+----------------------|
| main purpose | general programming | source code building |
| syntax       | powerful            | obscure, error prone |
|              |                     |                      |

Needed:
+ clear, specific syntax
+ store intermediate steps in files
+ stop/restart at any step
+ keep a detailed log
